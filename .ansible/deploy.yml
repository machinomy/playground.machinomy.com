---
- hosts: all
  gather_facts: True

  vars:
    nodejs_version: "6"
    debian_repo_version: "6.x"
    site_name: playground.machinomy.com
    site_dir: "/srv/www/{{site_name}}"

  tasks:

    - name: Install  software-properties-common
      apt:
        name: software-properties-common
        update_cache: yes
      become: true

    - name: Set up ethereum PPA
      apt_repository:
        repo: "ppa:ethereum/ethereum"
        update_cache: yes
      become: true

    - name: Install geth
      apt:
        name: ethereum
      become: true

    - file:
        path: ~/.local/share/systemd/user
        state: directory

    - copy:
        src: files/geth.service
        dest: ~/.local/share/systemd/user/geth.service

    - copy:
        src: files/UTC--2017-01-05T22-19-31.803427098Z--db9c908904a93b7710db2e27a4d69b12e4a38daf
        dest: ~/.ethereum/testnet/keystore/UTC--2017-01-05T22-19-31.803427098Z--db9c908904a93b7710db2e27a4d69b12e4a38daf

    - systemd:
        enabled: no
        user: yes
        name: geth

    - systemd:
        user: yes
        state: started
        enabled: yes
        name: geth

    - name: Ensure the system can use the HTTPS transport for APT
      stat:
        path: /usr/lib/apt/methods/https
      register: apt_https_transport

    - name: Install HTTPS transport for APT
      apt:
        pkg: apt-transport-https
        state: installed
      when: not apt_https_transport.stat.exists

    - name: Import the NodeSource GPG key into apt
      apt_key:
        url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
        state: present
      become: yes
      become_user: root

    - name: Add NodeSource deb repository
      apt_repository:
        repo: 'deb https://deb.nodesource.com/node_{{ debian_repo_version }} {{ ansible_distribution_release }} main'
        state: present
      become: yes
      become_user: root

    - name: Add NodeSource deb-src repository
      apt_repository:
        repo: 'deb-src https://deb.nodesource.com/node_{{ debian_repo_version }} {{ ansible_distribution_release }} main'
        state: present
      become: yes
      become_user: root

    - name: Install Node.js
      apt:
        pkg:
          - nodejs={{ nodejs_version }}*
        state: installed
        update_cache: yes
      become: yes
      become_user: root

    - name: Make /srv/www/playground.machinomy.com folder
      file:
        path: "{{site_dir}}"
        recurse: yes
        state: directory
        owner: "{{ansible_user_id}}"
      become: yes
      become_user: root

    - name: Git
      git:
        repo: git@github.com:machinomy/playground.machinomy.com.git
        dest: "{{site_dir}}"
        update: yes
        accept_hostkey: yes

    - name: Install npm dependencies
      command: npm install
      args:
        chdir: "{{site_dir}}"

    - file:
        path: ~/.machinomy
        state: directory

    - copy:
        src: files/config.json
        dest: ~/.machinomy/config.json

    - file:
        path: ~/.local/share/systemd/user
        state: directory

    - copy:
        src: files/playground.service
        dest: ~/.local/share/systemd/user/playground.service

    - systemd:
        enabled: no
        user: yes
        name: playground

    - systemd:
        user: yes
        state: started
        enabled: yes
        name: playground

    - name: Install nginx
      apt:
        pkg: nginx
        state: installed
      become: yes
      become_user: root

    - name: Deactivate the default nginx site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      become: yes
      become_user: root

    - name: Copy the site config
      template:
        src: templates/site.conf.j2
        dest: "/etc/nginx/sites-available/{{site_name}}.conf"
      become: yes
      become_user: root

    - name: Activate the site
      file:
        src: "/etc/nginx/sites-available/{{site_name}}.conf"
        dest: "/etc/nginx/sites-enabled/{{site_name}}.conf"
        state: link
      become: yes
      become_user: root

    - name: Reload nginx
      service:
        name: nginx
        state: reloaded
      become: yes
      become_user: root
